export function isNative(value: any): boolean;
export function isObject(value: any): boolean;
export function isArray(value: any): boolean;
export function isFunction(value: any): boolean;
export function isString(value: any): boolean;
export function isNumber(value: any): boolean;
export function isFloat(value: any): boolean;
export function isUndefined(value: any): boolean;
export function isNull(value: any): boolean;
export function isFalsy(value: any): boolean;
export function isRange(value: any): boolean;
export function isElement(elem: any): boolean;
export function isAbsoluteURL(url: any): boolean;
export function preventDefault(event: any): void;
export function isCssVarSupport(): boolean;
export function addCSSRule(sheet: any, selector: any, rules: any, index: any): void;
export function isURL(str: any): any;
export function isElementInViewport(rect: any): boolean;
export function request(options: any): Promise<any>;
export function chunkArray(arr: any, size: any): any[];
export function addStyle(element: any, value: any): void;
export function emptyStyle(element: any): void;
export function addClass(element: any, value: any): void;
export function removeClass(element: any, value: any): void;
export function hasClass(element: any, value: any): any;
export function clearSelections(): void;
export function replacePathInCSS(css: any, mapFunc: any): any;
export function filename(path: any): any;
export function dirname(path: any): string;
export function getExtension(path: any): string;
export function join(...args: any[]): string;
export function debounce(fn: any, time: any): () => void;
export function createTreeWalker(node: any): TreeWalker;
export function createTextNodeIterator(node: any): NodeIterator;
export function getNextTextNode(range: any): any;
export function uuid(): string;
export function once(fn: any, context?: any): (...args: any[]) => any;
export const isNaN: (number: unknown) => boolean;
export function assign(obj: any, ...args: any[]): any;
export function extend(target: any, ...sources: any[]): any;
export function requestIdleCallback(handler: any, options: any): number;
export function cancelIdleCallback(id: any): void;
export function requestAnimationFrame(callback: any): void;
export function getChildNodes(root: any): any[];
